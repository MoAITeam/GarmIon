{\rtf1\ansi\ansicpg1252\deff0\nouicompat\deflang1040{\fonttbl{\f0\fnil\fcharset0 Calibri;}{\f1\fnil\fcharset2 Symbol;}}
{\colortbl ;\red255\green0\blue0;}
{\*\generator Riched20 10.0.19041}\viewkind4\uc1 
\pard\sa200\sl276\slmult1\cf1\f0\fs22\lang16 INTRODUZIONE\cf0\par
In un mondo in cui l'avanzata tecnologica \'e8 ormai arrivata ad abbracciare la maggior parte dei settori sia lavorativi che ricreativi \'e8 inevitabile che uno di questi sia proprio quello della moda.A partire dalla digitalizzazione dei negozi attraverso schermi digitali e shops online all'uso della blockchain per la validazione dell'autenticit\'e0 dei capi, anche l'intelligenza artificiale entra a far parte dei casi d'uso di questo ambiente.Una tecnologia che non solo \'e8 necessaria alle grandi aziende per assicurarsi una ottimizzazione nelle vendite e nella distribuzione ma anche estremamente utile all'utente che,non volendo, si trova catapultato in un mondo digitale dove l'offerta si traduce in milioni di capi diversi da poter scegliere ed acquistare.Di conseguenza l'utente potrebbe essere facilitato nell'acquisto se un sistema gli consigliasse quali abiti si abbinano meglio in base a quelli che gi\'e0 possiede,evitando quindi di comprare indumenti che non rientrano nel suo stile e scegliendo solo i pi\'f9 appropriati.\par
E se l'utente volesse influenzare la scelta,oltre all'abbinamento per colore,attraverso altri parametri?Come potremmo risolvere se il compratore si sentisse particolarmente felice in quel momento o se dovesse scegliere un outfit per un matrimonio,ad esempio?\par
La nostra soluzione \'e8 stata quella di realizzare una applicazione multipiattaforma che integrando dei particolari modelli di intelligenza artificiale riesce a suggerire all'utilizzatore una moltitudine di abbinamenti plausibili che rispecchiano sia lo stato d'animo puntuale dello stesso che la volont\'e0 di usare quell'outfit per un evento in particolare,come pu\'f2 essere un matrimonio,un picnic,una serata al pub....\par
L'utente sar\'e0 cos\'ec in grado di avere sempre a portata di mano oltre al proprio armadio virtuale,anche una sorta di "personal stylist" realizzata dai modelli di AI grazie alla quale potr\'e0 farsi suggerire nuovi capi in abbinamento a quelli che gi\'e0 possiede,e che inoltre i suddetti abbinamenti siano anche congruenti al'evento a cui l'utilizzatore dovr\'e0 partecipare o allo stato d'animo che vuole trasmettere indossando tale outfit.\par
\par
\cf1 INTRODUZIONE FRONT END\cf0\par
In questa sezione l'intento \'e8 quello di esporre tutte le tecnologie pi\'f9 importanti che sono state necessarie per sviluppare il front end della nostra applicazione. In particolare il front end si occupa di definire una interfaccia utente intuitiva attraverso la quale l'utente pu\'f2 interagire per inviare dati al server e assue la responsabilit\'e0 di elaborare e gestire tali dati in ingresso affinch\'e8 siano conformi a quelli richiesti dal back end.\par
\cf1 INTRODUZIONE BACK END\par
\cf0 Cos\'ec come \'e8 stato fatto per il front end, andremo a spiegare in questa sezione gli strumenti utilizzati per gestire la parte back end del progetto. Il backend, pi\'f9 nel dettaglio, si occupa di gestire i dati provenienti dall'interfaccia in modo da poterli processare attraverso modelli e funzioni lato server in modo da poter tornare all'utente un risultato dei dati inviati.\par
Qui di seguito sono esposte le tecnologie utilizzati per far fronte alla gestione del backend.\par
\cf1 KOBAYASHI\par
\cf0 Parliamo di bias ogni qualvolta una suggesione ci porta ad agire in modo diverso da quanto saremmo soliti fare se quella particolare inclinazione non ci avesse mai colpiti. A livello psicologico, \'e8 intuibile pensare che le emozioni che proviamo potrebbero essere proprio quella influenza che ci porta a comportarci in un modo o nell'altro. Per deduzione, anche il nostro modo di vestire quotidiano e i colori indossati potrebbero far parte di quelle azioni che le varie suggestioni emotive ci portano a compiere.\cf1\par
\cf0 Difatti per quanto riguarda la teoria filosofico-scientifica che fa da fondamento alla rete neurale che abbiamo utilizzato per suggerire l'outfit in base al mood in questo progetto \'e8 derivante dagli studi sul colore e dei suoi accostamenti dello studioso giapponese Shigenobu Kobayashi. Nel libro "Color Image Scale" edito nel 1990 oltre a studiare le possibili correlazioni con vastissimi ambiti come forme e cucina, Kobayashi si sofferma sul tema forse pi\'f9 filosofico,che riprende maggiormente le correnti di pensiero del Sol Levante, la sua madre patria : le emozioni.\par
Nel senso pi\'f9 letterale del termine Kobayashi associa a dei gruppi di colore una particolare emozione, dopo aver chiaramente analizzato il problema da un punto di vista psico-sociologico. Applicando i suoi studi alla moda, \'e8 intuitivo pensare che se una persona si veste usando colori prettamente scuri e cupi potrebbe esprimere una sensazione negativa mentre colori sgargianti  e luminosi potrebbero trasmettere benestare. Di fatto lo studioso giapponese va a formalizzare queste intuizioni creando cos\'ec un sistema biunivoco che correla una particolare emozione ad una combinazione di colori.\par
Come spiegheremo pi\'f9 avanti, nella sezione dedicata ai modelli usati per la categorizzazione, le triplette di colore identificate da Kobayashi vengono fatte coincidere con precisi stili che riflettono l'attitudine di una persona in modo da suggerire un abbinamento corretto per ogni occasione\par
\par
\cf1 FINALIT\'e0 DEL PROGETTO\par
\cf0 Lo scopo del progetto, dunque, \'e8 stato quindi quello di sviluppare un'applicativo nativo cross-platform che permettesse all'utente di avere una sorta di stilista digitale sempre a portata di mano. Quest'ultimo potr\'e0 infatti andare a creare il proprio armadio virtuale andando a scattare delle foto ai suoi capi di abbigliamento e, una volta aggiunti, ricercarli attraverso dei filtri.\par
Per quanto riguarda l'aggiunta del capo, oltre a dover inserire i dati principali del prodotto come colore, categoria e stagione, qui sotto spiegati, all'utente verr\'e0 inoltre richiesto di scattare una foto. Abbiamo pensato che l'utilizzo di un segmentatore potesse essere perfettamente votato alla causa: in questo modo l'indumento verr\'e0 completamente ritagliato dallo sfondo in modo tale da escludere eventuali altri oggetti, che oltre ad essere inutili da un punto di vista informativo potrebbero condurre in errore le reti neurali, le quali potrebbero considerarli in una eventuale raccomandazione.\par
 I filtri che permettono di discriminare la ricerca in base a 3 diversi tag:\par
- Colore: quindi si va a filtrare tutti quegli abiti con il colore selezionato\par
- Categoria: ovvero se l'indumento \'e8 un top o un bottom, ad esempio una TShirt \'e8 un top mentre un paio di jeans \'e8 un bottom.\par
- Stagione: in base a quale stagione sar\'e0 pi\'f9 consono indossare il vestito selezionato.\par
Una volta aggiunti, i vestiti potranno dunque essere selezionati e l'applicazione andr\'e0 a proporre degli outfit che costituiscono un match , chiaramente in base alla correttezza di abbinamento dei colori. L'utente tuttavia avr\'e0 la facolt\'e0, in questo caso, di poter ulteriormente filtrare i risultati in base al colore dell'indumento proposto, ed in base al mood in cui si trova e all'evento sociale per il quale utilizzer\'e0 tale outfit.\par
Chiaramente la raccomandazione in base a stile ed evento \'e8 adempiuta dalle due reti neurali che avevamo a disposizione: queste prenderanno inizialmente in ingresso l'indumento iniziale e proporranno una serie di abbinamenti coerenti. Ogni abbinamento verr\'e0 quindi scansionato per determinare il mood e l'evento appropriati, informazione che quindi verr\'e0 attaccata all'outfit stesso. A questo punto, una volta che l'utente decider\'e0 di discriminare i risultati in base a questi filtri, baster\'e0 semplicemente controllare se il metadato corrispondente \'e8 coerente o meno con la cernita effettuata.\par
Una volta trovato l'abbinamento o gli abbinamenti l'utente dovr\'e0 essere in grado di salvarli in locale e poterli visualizzare con persistenza su un'altra tab, in modo da poter sfruttarli in pi\'f9 occasioni, anche qui potendo discernere in base allo stile e alla situazione sociale in cui sarebbe perfetto indossarli. Ovviamente dovr\'e0 essere in grado anche di visualizzare il mood e l'evento per cui erano stati pensati tali outfit, e inoltre dovr\'e0 poterli modificare e/o eliminarli.  \cf1\par
\cf0\par
\cf1 INTRODUZIONE SU MANN\par
\cf0 Anche se nello sviluppo dell'applicativo le reti neurali sono state solo integrate \'e8 necessario definire una piccola finestra in questa tesi per fornire una contestualizzazione delle stesse in questa trattazione.\par
a)\cf1 RETI NEURALI\par
\cf0 Una rete neurale artificiale \'e8 un sistema computazionale che sfrutta i meccanismi dell'apprendimento automatico per apprendere e abituarsi a pattern regolari cercando di emulare cos\'ec il lavoro compiuto dal nostro cervello e cercando di reagire a diversi stimoli e sfide come quest'ultimo fa da ormai migliaia di anni. Il nome infatti ricalca le nozioni biologiche conosciute andando a sostituire a neuroni e dendriti che fanno da padrone nel sistema nervoso, quelli che sono dei neuroni artificiali e processi connessi che generalemente permettono al modello di essere adattivo, in modo tale che cambi la propria struttura come se fosse una funzione del tempo e dei dati che sono gi\'e0 stati processati.\par
Facendo un parallelismo biologico, il neurone biologico soggetto ad uno stimolo in ingresso proveniente da altre connessioni sinaptiche  si attiva e se il potenziale di attivazione supera una soglia definita come potenziale di azione, genera un segnale che si propaga attraverso il suo assone ad altri neuroni. Allo stesso modo, anche se spiegato in maniera semplicistica,  una rete neurale artificiale \'e8 composta da vari strati di neuroni, dove ognuno di essi \'e8 connesso a tutti i neuroni dello strato successivo e la cui connessione rappresenta quella che \'e8 l'attivazione, corrispondente in informatica ad un peso. L'attivazione comporter\'e0 il calcolo di una Funzione di Attivazione che avr\'e0 il compito di passare il valore dei vari pesi processati allo strato seguente.Tutto questo processo continua fino a che non si arriva allo strato finale costituito dai neuroni di output che vanno a restituire il valore finale.\par
L'apprendimento della rete si imposta proprio alla regolazione di questi pesi fino a che l'output corrispondente all'input inviato non \'e8 quello desiderato.\par
\par
\cf1 b) MANN\cf0\par
La tipologia di rete neurale che usano i nostri modelli \'e8 la MANN, o Memory Augmented Neural Network. Questa versione permette di usufruire di un supporto di memoria persistente che viene riservata nel momento del training e che poi viene acceduta quando si ha necessit\'e0 di fare inferenza. In questo modo l'accesso ai dati \'e8 pi\'f9 rapido ed inoltre si limitano i dati ridondanti.\par
In particolare noi abbiamo utilizzato delle reti neurali per categorizzare una coppia di indumenti, o outfit, in un preciso stile e/o evento sociale, in modo da consigliare all'utilizzatore un preciso abbinamento in base alle sue richieste.\par
L'applicativo di basa su due principali reti neurali:\par
- Style Based Outfit Recommendation: si occupa di definire, data una coppia di indumenti, un preciso stile di abbigliamento derivante dal colore e dalle forme degli abiti. Questa rete \'e8 addestrata a partire dal dataset IQON3000  che contiene 308,347 outfits creati da 33569 utenti per mezzo di 672,335 accessori di moda.\par
Come anticipato prima lo stile dell'outfit si basa principalmente sul tono di un abito, che pu\'f2 essere pi\'f9 freddo o pi\'f9 caldo, e dalla sua silhouette, pi\'f9 leggiadra o meno. In particolare le categorie nelle quali il categorizzatore include gli outfits sono riportate nella foto sottostante.\par
FOTO \par
-Fashion2Events: allo stesso modo questa rete neurale restituisce un preciso evento sociale a partire da un outfit, ovvero una coppia di indumenti. Il modello \'e8 allenato a partire dal dataset USED, che contiene circa 525,000 immagini appartenenti a 14 tipi diversi di evento, divise in:\par
-train set: 361,000 files \par
-Test set: 164,000 files.\par
Addestrandosi su questo dataset la rete riesce a comprendere qual \'e8 approssimativamente lo stile che generalmente viene usato ad un preciso evento. Nello specifico le label associate agli eventi sono: concert, graduation, meeting, mountain-trip, picnic, sea-holiday, ski-holiday, wedding, conference, exhibition, fashion, protest, sport, theater-dance.\par
A partire da queste label quindi ne va ad attribuire una all'outfit che ci premuriamo di salvare insieme agli altri metadati dell'outfit stesso.\par
\par
\par
\cf1 CONCETTO CROSS PLATFORM\par
\cf0 L'avanzare tecnologico e l'impronta sempre pi\'f9 grande che gli smartphone, o comunque i dispositivi tecnologici personali con cui interagiamo, hanno sulla nostra vita, ha reso lo sviluppo di applicativi un materia sempre pi\'f9 importante e remunerativa a livello globale, andando ad incidere su una fetta di mercato che riguarda quasi totalmente la popolazione mondiale.\par
L'approccio mobile-first la fa da padrone, in quanto ormai i computer sono stati perlopi\'f9 sostituiti da dispositivi che possiamo tenere sempre pi\'f9 a portata di mano come smartphones e smartwatches, e le aziende hanno sentito la necessit\'e0 di spostare i loro canali di comunicazione favorendo lo sviluppo di app mobili in modo da rivolgersi ad un pubblico pi\'f9 vasto. E per la dura legge dell'economia si preferisce sempre pagare di meno per un progetto che \'e8 pi\'f9 facile da mantenere e pi\'f9 compatibile.\cf1\par
\cf0 Con il concetto di cross-platform si intende infatti la capacit\'e0 di sviluppare un'applicativo compilabile su diversi processori e sistemi operativi attraverso l'utilizzo di un singolo linguaggio, senza quindi creare due versioni logicamente equivalenti ma che hanno bisogno di essere scritte in linguaggi diversi per funzionare su dispositivi eterogenei.\par
Alcuni esempi di linguaggi cross-platform sono il C, Java, PHP, Python, ecc.. Questi infatti possono essere compilati su diverse macchine indipendentemente se su queste \'e8 stato installato un qualsiasi sistema operativo, rendendo quindi possibile scrivere codice che sar\'e0 chiaramente compatibile e condivisibile tra diversi utenti possessori di macchine diverse.\par
Il cross-platform \'e8 una tematica molto importante per quanto riguarda lo sviluppo di applicativi in quanto permette un risparmio di tempo considerevole in quanto non \'e8 necessario scrivere la stessa logica in linguaggi diversi, e di conseguenza anche un risparmio economico per le aziende, dovendo mantenere una singola versione di codice e non due sostanzialmente uguali come avverrebbe normalmente.\par
Sebbene non sia tutto oro quel che luccica in quanto uno sviluppo nativo garantisce comunque la massima espressivit\'e0 logica pel\'ecr il dispositivo per cui stiamo sviluppando ed un supporto completo, la possibilit\'e0 di avere un solo linguaggio per diverse piattaforme e essere capaci di creare UI identiche tra una piattaforma all'altra rende lo sviluppo cross-platform molto appetibile.\par
Nel nostro caso l'utilizzo di tecnologie cross-platform ci ha permesso di sviluppare una applicazione che ha la facolt\'e0 di essere compilata ed eseguita sia su device basati su Android sia IOS, nonch\'e8 possa essere convertita anche in una web app.In particolare abbiamo raggiunto il nostro scopo attraverso l'uso del framework open source Ionic e integrando Capacitor, runtime che supporta sia Swift per IOS, sia Java per Android. \par
La nostra volont\'e0 \'e8 stata quella di adattare un approccio cross platform in modo tale da poter integrare la nostra web app su dispositivi mobile senza la necessit\'e0 di dover implementare due diverse versioni di codice e senza il bisogno di imparare due differenti linguaggi per lo sviluppo nativo. Il risultato quindi \'e8 stato quello di una app che si modella perfettamente sia in ambiente mobile che desktop e che richiede un bassissimo livello di mantenimento, in quanto le future modifiche verranno eseguite solo su una versione di codice.\par
\cf1\par
TECNOLOGIE USATE\par
\cf0 Al fine di sviluppare la nostra applicazione abbiamo utilizzato diverse soluzioni tecnologiche che spiegheremo dettagliatamente in questo capitolo.In particolare abbiamo avuto cura di scegliere le soluzioni che pi\'f9 si avvicinavano allo scopo del progetto e che ci hanno consentito uno sviluppo pi\'f9 agile e profondo.\par
\cf1\par
1) ANGULAR\par
\cf0 Occuparsi del front end di una applicazione senza integrare un framework dedicato potrebbe essere molto pi\'f9 complicato del previsto, in quanto dover gestire il tutto basandosi solo sugli strumenti che HTML, CSS  e JavaScript mettono a disposizione non sempre permettono di raggiungere un livello di profondit\'e0 di sviluppo, mantenendo allo stesso tempo semplicit\'e0 di comprensione e ordine a livello di organizzazione e struttura.\par
Per queste ragioni ci siamo affidati al framework open source Angular sviluppato da Google, che da anni la fa ormai da padrone all'interno del panorama dello sviluppo di applicativi web grazie alla velocit\'e0 con cui si riesce ad apprendere e alle innumerevoli possibilit\'e0 che offre per semplificare la scrittura di codice e markup.\par
In quanto \'e8 stato pensata come tecnologia mobile first, se usato in combinazione con il toolkit opensource Bootstrap o come nel nostro caso con Ionic riesce a far diventare le applicazioni responsive, ovvero il loro design si adatta in funzione delle dimensioni del dispositivo in uso.\par
Parlando di tecnicismi, al posto di JavaScript per quanto riguarda la gestione del lato scripting dell'applicativo, viene usato TypeScript, linguaggio di programmazione opensource sviluppato da Microsoft che rimane comunque retrocompatibile in quanto ogni programma scritto in JavaScript funzioner\'e0 anche in TypeScript.\par
Le applicazioni sviluppate in Angular vengono eseguite interamente dal web browser dopo essere state scaricate dal web server (elaborazione lato client). Questo comporta il risparmio di dover spedire indietro la pagina web al web-server ogni volta che c'\'e8 una richiesta di azione da parte dell'utente. Il codice generato da Angular gira su tutti i principali web browser moderni quali ad esempio Chrome, Microsoft Edge, Opera, Firefox, Safari ed altri.\par
Al fine di definire in maniera pi\'f9 approfondita l'uso che abbiamo fatto di questo strumento al fine di realizzare questo applicativo, \'e8 necessario entrare nel dettaglio degli strumenti che abbiamo utilizzato. In particolare \'e8 stato di grande aiuto l'utilizzo di componenti, grazie ai quali abbiamo potuto considerare degli elementi della app, quindi scritto in HTML, come se fossero oggetti, rendendo possibile una maggior facilit\'e0 a livello di gestione della dinamica e del passaggio di dati tra componenti padri e figli. I servizi, invece, sono stati fondamentali a mantenere informazioni che dovevano essere trasmesse tra componenti, mentre le direttive sono state utilizzate per creare o distruggere a runtime gli elementi nel DOM a seconda dei comportamenti desiderati. \par
\cf1 A) COMPONENTE\par
\cf0 Un componente \'e8 l\rquote elemento principale di un\rquote applicazione Angular, in particolare contiene la logica di interazione dati e utente che definisce l\rquote aspetto ed il comportamento della vista.\par
I componenti Angular sono semplici classi Javascript, definiti tramite il decoratore @Component che fornisce al componente la vista per visualizzare i metadati della classe. I componenti forniscono dati alla vista utilizzando l\rquote associazione di dati per farlo, il cosiddetto data binding. In questo modo il componente pu\'f2 anche sapere quando la vista viene modificata e soprattutto permette al componente stesso di passare dati alla vista in modo completamente dinamico.\cf1  \cf0 Le applicazioni Angular possono avere N componenti, nel quale ognuno viene dedicato a gestire una singola porzione dell\rquote interfaccia utente, lavorando insieme per fornire la UI dell\rquote applicazione.\cf1\par
\cf0 Inoltre un componente \'e8 una entit\'e0 personalizzabile e configurabile che pu\'f2 a sua volta essere inserito all'interno di altri componenti. \'c8 quindi possibile andare a definire una gerarchia dove le entit\'e0 padre (quelle che contengono) possono condividere con le entit\'e0 figlie delle informazioni, e viceversa e figlie possono notificare i padri se queste informazioni o altre propriet\'e0 sono cambiate.Nel progetto globale si andr\'e0 quindi ad instaurare una gerarchia ad albero che vedr\'e0 come radice un elemento base che di default \'e8 nominato AppComponent che presenta un selettore <app-root> che viene aggiunto ad index.html.\par
Trattato il decoratore @Component che rende una classe un componente \'e8 necessario analizzare le principali propriet che vanno a descrivere il componente:\par
-Selector: specifica un tag tramite il quale la nostra vista che rappresenta il componente viene posizionata nel progetto Angular.\par
-providers: sono i servizi che verranno utilizzati dal componente. I servizi forniscono dati al componente o ad altri servizi.\par
-directives: ovvero le direttive che utilizza il componente.\par
-styles: gli stili CSS o il foglio di stile di cui ha bisogno il componente. Possiamo usare un foglio di stile esterno (usando styleUrls) o stili incorporati (utilizzando styles), detti stili sono specifici del componente.\par
-template: modello HTML che definisce la nostra vista. Indica ad Angular come eseguire il rendering della vista del componente. I template possono essere in linea (con template) oppure si pu\'f2 utlizzare un file esterno (templateUrl). Un componente pu\'f2 avere solo un modello. \par
Dato che comunque il componente rimane un oggetto e come tale \'e8 provvisto di un costruttore, \'e8 soggetto alle meccaniche di lifecycle degli oggetti che determinano la creazione,la modifica, la cancellazione di un oggetto. La definizione di queste meccaniche ci permette di avere un maggior controllo sul nostro componente grazie ai lifecycle hooks, ovvero metodi che verranno opportunatamente invocati da Angular in corrispondenza della fase in cui si trova il componente durante il suo ciclo di vita. In totale Angular mette a disposizione 8 hooks che rispecchiano un momento preciso della vita del componente:\par
- ngOnInit: invocato in fase di inizializzazione, dopo che \'e8 stato eseguito il costruttore.\par
-ngOnChanges: invocato quando viene rilevata una modifica delle propriet\'e0 a cui viene applicato il decoratore @Input(), funziona solo nel caso in cui le propriet\'e0 di Input sono di un tipo semplice (come string, number, ecc..) mentre invece il cambiamento di un oggetto passato per riferimento viene rilevato solo se cambia il riferimento stesso.\par
-ngDoCheck: viene sempre invocato quando viene effettuata una modifica a un componente. A differenza di ngOnChanges(), questo metodo viene invocato ogni volta.\par
-ngAfterContentInit: viene chiamato dopo che \'e8 stata completata l'inizializzazione degli elementi passati al componente dall'esterno a cui si fa riferimento col nome Content Children.\par
-ngAfterContentChecked: viene invocato dopo che il meccanismo di Change Detection di Angular ha controllato tutti i suoi Content Children.\par
-ngAfterViewInit: invocato immediatamente dopo che Angular ha completato l'inizializzazione della view di un componente e dei suoi View Children. Il metodo che lo precede \'e8 ngAfterContentChecked().\par
-ngAfterViewChecked: invocato in questo caso la prima volta dopo il metodo ngAfterViewInit(). Successivamente viene preceduto dal Lifecycle hook ngAfterContentChecked() e viene eseguito non appena Angular ha controllato la view del componente e dei suoi View Children.\par
-ngOnDestroy: eseguito prima di distruggere il componente.\cf1\par
B) SERVIZI\par
\cf0 Nel caso in cui si vogliano far comunicare due componenti (sia unilateralmente che bilateralmente) che non siano parent e child, allora la soluzione che abbiamo utilizzato per sopperire a questo scopo sono stati proprio i servizi. Oltre a questo ambito \'e8 possibile utilizzare i servizi anche per la gestione della logica di business dell'applicazione\par
Un servizio \'e8 solitamente rappresentato da una classe indipendente dalla View che viene definita per svolgere un compito ben preciso ed effettuare delle operazioni strettamente correlate tenendo in mente il principio di singola responsabilit\'e0. \'c8 ovviamente possibile definire pi\'f9 servizi all'interno di un'applicazione, ognuno dei quali si occuper\'e0 di portare a termine un determinato incarico. Chiaramente una volta creati i servizi potranno interagire con gli altri componenti: \'e8 necessario infatti iniettarli all'interno di uno o pi\'f9 componenti tramite un meccanismo di Dependency Injection.\par
Oltre a rendere pi\'f9 facile la comunicazione tra componenti i servizi sono anche molto pi\'f9 facili da testare e sono facilmente riutilizzabili.\cf1\par
C) DIRETTIVE\par
\cf0 Oltre ai componenti che sono una particolare direttiva caratterizzata dalla presenza di un template, nel nostro progetto abbiamo usato in particolare le direttive strutturali che permettono di modificare la struttura del DOM, permettendo cos\'ec di aggiungere o cancellare gli elementi in base a precise richieste.\par
Le pi\'f9 importanti sono, le direttive:\par
-NgIf: funziona esattamente come un if logico. Se il risultato della proposizione da testare \'e8 vero allora l'elemento viene renderizzato, altrimenti questo viene rimosso temporaneamente dal DOM. Ovviamente se l'elemento a cui viene applicata la direttiva dovess contenere altri componenti e il risultato dell'if fosse falso, allora anche essi non verrebbero visualizzati\par
-ngForOf: allo stesso modo, questa direttiva ricalca la versione logica di un for. Molto utile per renderizzare una serie di componenti o elementi a partire da un vettore di informazioni, un'esempio nella applicazione che stiamo trattando possiamo trovarlo nella galleria principale che visualizza l'armadio virtuale. Qui infatti viene iterato tutto il vettore che contiene le immagini e i metadati corrispondenti agli indumenti e per ognuno viene creato e mostrato il componente che si occupa di visualizzare il vestito.\par
\cf1\par
2) IONIC\par
\cf0 Ionic \'e8 un framework open source creato allo scopo di realizzare app cross platform native e web app semplice, veloce ed efficiente. Rilasciato nel corso del 2013 da Drifty co. , inizialmente si basava solamente su Angular JS; tuttavia lo sviluppo \'e8 proseguito andando ad inglobare i nuovi framework per UI React, Angular e Vue.Si tratta di un modulo npm e quindi necessita di Node.js per funzionare.\par
In particolare questa tecnologia provvede gli strumenti per sviluppare web app e app mobile ibride basate su tecniche e pratiche moderne, integrando tecnologie web come CSS, SCSS  e HTML e per rilasciarle sul mercato mobile attraverso Capacitor o Cordova, che si occupano della conversione dell'app in modo che sia compatibile con il device in uso.\par
In particolare nel corso dello sviluppo abbiamo utilizzato i seguenti componenti Ionic per la realizzazione del nostro applicativo:\par
-ion-slides: \'e8 un container multisezione, dove si pu\'f2  scorrere ogni sezione per visualizzare delle ion-slide. L'abbiamo utilizzata in "garment-detail" al fine di potere proporre una moltitudine di abbinamenti per il capo scelto dall'utente e in modo che quest'ultimo possa scorrere tra esse e scegliere quella che \'e8 pi\'f9 di suo gusto.\par
-ion-content: provvede un area per i contenuti ed offre diversi metodi per controllare lo scrolling. Viene utilizzato una singola volta in tutti i nostri componenti al fine di poter definirne i contenuti.\par
-ion-header: \'e8 il componente che definisce la parte estrema superiore dell'app. Permette la definizione al suo interno di una toolbar e la contestualizzazione della tab o pagina in cui siamo attraverso la possibilit\'e0 di aggiungergli un testo.\par
-ion-img: \'e8 il tag sostitutivo al quasi omonimo tag <img> di HTML. In realt\'e0  per quanto lo scopo possa essere similare, le caratteristiche e le funzioni della versione Ionic sono nettamente superiori. In particolare nel nostro caso, dovendo visualizzare potenzialmente molte foto (chiaramente va in base alla dimensione dell'armadio dell'utente), questo componente ci \'e8 estremamente utile in quanto implementa un meccanismo di lazy-load che permette di caricare le immagini solo quando queste ultime sono effettivamente visibili. In questo modo ci permette di realizzare un meccanismo di paging in automatico, il quale ci permette di evitare fastidiosi rallentamenti e cali di prestazioni per il caricamento di troppe immagini contemporaneamente. Parlando di tecnica, ion-img utilizza "IntersectionObserver" per questo scopo: quest'ultima \'e8 una API che viene utilizzata per capire la visibilit\'e0 e la posizione degli elementi del DOM relativi alla viewport, posizione che viene "spedita" in maniera asincrona agli elementi che fanno uso di questa funzione. \par
-ion-select: implementa un form grazie al quale l'utente pu\'f2 selezionare una o pi\'f9 opzioni, simile al <select> nativo. Quando l'utilizzatore preme sul form, viene visualizzato un dialog attraverso il quale pu\'f2 effettuare la sua scelta in maniera intuitiva premendo su uno degli elementi della lista, che vengono tecnicamente definiti da dei <ion-select-option>.\par
-ion-card:  Le cards sono una parte standard dell'interfaccia utente che funge da punto di ingresso per informazioni pi\'f9 dettagliate. Una card pu\'f2 essere un singolo componente, ma spesso \'e8 composta da intestazione, titolo, sottotitolo e contenuto. Grazie a questo componente abbiamo potuto dare alla nostra app un aspetto grafico decisamente pi\'f9 ordinato e intuitivo, in quanto ci ha permesso di raggruppare molti elementi del nostro progetto in delle box predefinite.\par
-ion-icon: permette di definire una icona che viene recuperata da un pacchetto di icone sviluppate appositamente per "Ionic".\par
-ion-alert: Un alert \'e8 una finestra di dialogo che presenta agli utenti informazioni o raccoglie informazioni dall'utente. Viene visualizzato un avviso personalizzabile sopra il contenuto dell'app e deve essere eliminato manualmente dall'utente prima che possa riprendere l'interazione con l'app. Pu\'f2 anche avere opzionalmente un header, subHeader e message.Lo abbiamo utilizzato principalmente per dare consigli di uso all'utente o avvisarlo di possibili dati che potrebbe non aver compilato.\par
-ion-button:  forniscono un elemento cliccabile, che pu\'f2 essere utilizzato nei moduli o ovunque si necessiti di funzionalit\'e0 di pulsanti semplici e standard. Possono visualizzare testo, icone o entrambi. I pulsanti possono essere stilizzati con diversi attributi per apparire in un modo specifico al fine di rispettare i diversi design delle app. L'utilizzo dei bottoni ricalca quello di un trigger: infatti attraverso l'attributo (ionChange) si pu\'f2 collegare una funzione all'evento di click del bottone stesso.\par
-ion-fab-button: I pulsanti di azione mobili (FAB) rappresentano l'azione principale in un'applicazione. Per default, hanno una forma circolare. Quando viene premuto, il pulsante pu\'f2 scatenare una o diverse funzioni, esattamente come gli "ion-button". Come suggerisce il nome, i FAB generalmente fluttuano sul contenuto in una posizione fissa. Ci\'f2 si ottiene esclusivamente utilizzando un componente <ion-fab> che fa da contenitore al bottone e che gli permette di fissarli al contenuto della pagina. Se il pulsante FAB non \'e8 avvolto con  <ion-fab> , scorrer\'e0 con il contenuto. I pulsanti FAB hanno una dimensione predefinita, comunque configurabile, e possono accettare diversi colori.\par
-ion-grid: \'e8 un potente sistema flexbox mobile-first per la creazione di layout personalizzati. \'c8 composto da tre unit\'e0: una griglia, riga/e e colonna/e, rispettivamente realizzate tecnicamente dagli elementi <ion-grid>, <ion-row> e <ion-col>. Le colonne si espanderanno per riempire la riga e verranno ridimensionate per adattarsi a colonne aggiuntive. Si basa su un layout a 12 colonne con diversi punti di interruzione in base alle dimensioni dello schermo. Il numero di colonne pu\'f2 essere personalizzato tramite CSS.\par
Questo sistema realizza un modo pratico e veloce per fornire all'applicativo un layout ordinato e pulito, nonch\'e8 avere una disposizione simmetrica di tutti gli elementi che compongono la pagina.\par
-ion-tabs: sono un componente di navigazione di primo livello per implementare una navigazione basata su schede. Il componente non ha stile e funziona come outlet del router per gestire la navigazione. Non fornisce alcun feedback sull'interfaccia utente o meccanismo per passare da una scheda all'altra. Per fare ci\'f2, \'e8 necessario definire un <ion-tab-bar> che dovrebbe essere fornito come figlio diretto di <ion-tabs>. \par
Entrambi ion-tabs e ion-tab-bar possono essere utilizzati come elementi autonomi. Non dipendono l'uno dall'altro per funzionare, ma di solito vengono utilizzati insieme per implementare una navigazione basata su schede che si comporta come un'app nativa.\par
Gli elementi che costituiscono un <ion-tabs> sono gli <ion-tab>, componente dichiarativo per un NavController e che permette di definire una tab in modo da separare visualmente sezioni diverse dell'app. \par
-ion-loading: \'e8 un overlay che pu\'f2 essere utilizzato per indicare l'attivit\'e0 durante il blocco dell'interazione dell'utente. L'indicatore di caricamento viene visualizzato sopra il contenuto dell'app e pu\'f2 essere ignorato dall'app per far riprendere l'interazione dell'utente. Si rivela molto utile in quelle situazioni in cui \'e8 necessaria una elaborazione dati che impiega diverso tempo e quindi garantisce un alto livello di usabilit\'e0, in quanto fornisce all'utente un feedback chiaro del caricamento in corso.\par
\cf1 3) CAPACITOR\par
\cf0 Capacitor \'e8 un runtime opensource per creare Native Web Applications, vale a dire per realizzare applicazioni mobile native semplicemente utilizzando Javascript, HTML e CSS. Capacitor rappresenta l\rquote evoluzione delle app ibride permettendoti di creare applicazioni in un\rquote ottica web first senza pregiudicare la possibilit\'e0 di sfruttare la tecnologia nativa del mondo mobile attraverso specifiche API.\par
Capacitor \'e8 il successore di fatto di tecnologie come Apache Cordova e Adobe PhoneGap, \'e8 ispirato da altri tool come React Native, \'e8 completamente integrato di default in Ionic App e permette la retrocompatibilit\'e0 con i plugin di Cordova per una maggiore aderenza alle varie esigenze di sviluppo.  Seppur condividendo i vantaggi multipiattaforma con Cordova, Capacitor possiede per\'f2 un approccio pi\'f9 moderno allo sviluppo di app, e sfrutta le pi\'f9 recenti API web. In particolare, come si pu\'f2 intuire \'e8 stato integrato con Ionic al fine della realizzazione di questo progetto.\par
Capacitor fornisce un set di API coerente e incentrato sul Web che consente a un'app di rimanere il pi\'f9 vicino possibile agli standard Web, accedendo al contempo a ricche funzionalit\'e0 native del dispositivo su piattaforme che le supportano. Infatti pu\'f2 sfruttare numerose API per accedere alle strumentazioni del device in uso come:\par

\pard{\pntext\f1\'B7\tab}{\*\pn\pnlvlblt\pnf1\pnindent0{\pntxtb\'B7}}\fi-360\li720\sa200\sl276\slmult1 Camera: utilizzata per catturare foto e video, noi la abbiamo sfruttata per acquisire le immagini degli indumenti.\par
{\pntext\f1\'B7\tab}File System: per leggere e scrivere file sul disco del dispositivo mobile.\par
{\pntext\f1\'B7\tab}Geolocation: per utilizzare le informazioni del GPS \par
{\pntext\f1\'B7\tab}Accelerometer: per utilizzare le informazioni dell\rquote accelerometro.\par
{\pntext\f1\'B7\tab}Notifications: per gestire le notifiche push.\par
{\pntext\f1\'B7\tab}Network: per gestire le app e le informazioni online ed offline.\par
{\pntext\f1\'B7\tab}Haptics: per gestire gli input fisici nei moderni dispositivi.\par

\pard\sa200\sl276\slmult1 Il nostro caso d'uso ci ha permesso di utilizzare solo le prime due funzionalit\'e0 tra quelle proposte qui sopra, in quanto l'applicativo si propone di catturare le foto del'indumento e, una volta processate, scriverle in archiviazione locale in modo da poterle recuperare anche in una sessione successiva e quindi garantendo una persistenza dei dati necessaria. In particolare abbiamo fatto uso dei moduli Camera e Storage di Capacitor per raggiungere lo scopo prefissato sopra: tramite i metodi esposti da essi \'e8 stato possibile utilizzare la fotocamera del device in uso per catturare l'immagine e successivamente salvarla in locale in formato base64 grazie alle funzioni di Storage.\par
Inoltre Capacitor pu\'f2 essere integrato con strumenti come React, Angular (in uso), Svelte, Vue e Stencil sia per la realizzazione da zero di applicativi web e nativi sia per convertire una web app gi\'e0 realizzata in una app ibrida pronta per diventare nativa.\par
\par
\par
\cf1 4) SEGMENTATORE\par
\cf0 Per quanto riguarda la presentazione delle immagini degli indumenti \'e8 stato necessario l'uso di un segmentatore. Questo perch\'e8 altrimenti le foto sarebbero state salvate cos\'ec come erano, introducendo non pochi problemi come:\par
- Estetica: lasciare nell'immagine ulteriori oggetti esterni fuori del contesto dell'indumento sarebbe stato in prima parte poco gradevole dal punto di vista visivo. \par
- Usabilit\'e0: l'eliminazione di soggetti estranei rende pi\'f9 intuibile che l'immagine riportata rappresenta totalmente un indumento, impedendo in questo modo incomprensioni da parte dell'utente.\par
- Correttezza: la presenza di corpi estranei avrebbe potuto influenzare negativamente l'azione dei modelli che forniscono gli abbinamenti. Ad esempio, il colore dei non indumenti avrebbe potuto influire sul colore totale dell'immagine, andando cos\'ec a porre in background il vero colore di interesse, ovvero quello del vestito.\par
In particolare, la segmentazione di un'immagine nell'elaborazione digitale delle immagini \'e8 il processo di partizione di un'immagine in regioni significative. Viene utilizzata per ottenere una rappresentazione pi\'f9 compatta, per estrarre degli oggetti o come strumento per l'analisi delle immagini e permette di partizionare le immagini digitali in insiemi di pixel. Lo scopo della segmentazione \'e8 semplificare e/o cambiare la rappresentazione delle immagini in qualcosa che \'e8 pi\'f9 significativo e facile da analizzare.\par
La segmentazione \'e8 di solito utilizzata per localizzare oggetti e bordi (linee, curve, ecc.). Pi\'f9 precisamente, la segmentazione \'e8 il processo con il quale si classificano i pixel dell'immagine che hanno caratteristiche comuni, pertanto ciascun pixel in una regione \'e8 simile agli altri della stessa regione per una qualche propriet\'e0 o caratteristica (colore, intensit\'e0 o texture). Regioni adiacenti sono significativamente differenti rispetto ad almeno una di queste caratteristiche. Il risultato di un'immagine segmentata \'e8 un insieme di segmenti che, collettivamente, coprono l'intera immagine. Nel nostro caso la segmentazione \'e8 stata utilizzata al fine di trovare i bordi dell'indumento, soggetto principale della foto, e successivamente ritagliarlo dallo sfondo.\par
In particolare abbiamo utilizzato Detectron2 un software proprietario di FaceBook AI Research,che implementa algoritmi di object-detection che hanno ormai raggiunto lo stato dell'arte. Ai fini del progetto \'e8 stata utilizzata la funzione di object-detection per identificare il vestito (che dovrebbe ricoprire la parte preponderante della foto) e i metodi per la instance segmentation in modo da ottenere la precisa squadratura dell'oggetto stesso.\par
Dal punto di vista prestazionale, il risultato, dopo aver fornito l'immagine di input, viene restituito mediamente dopo una decina di secondi dal modello gi\'e0 addestrato. Sebbene le tempistiche potrebbero sembrare larghe, in realt\'e0 per il task prefissato rispecchiano le medie temporali di altri segmentatori in commercio. Per ovviare comunque al problema di dover far attendere l'utente sul risultato in uscita dalla rete \'e8 stato provveduto un sistema di caricamento che fornisce un feedback visivo sullo stato di avanzamento dell'operazione.\par
A livello tecnico, l'immagine acquisita dalle API che gestiscono la fotocamera viene codificata in base64 per essere inviata al server, dove viene processata dal segmentatore che prima la riconverte in png, la elabora, per poi ritornarla al front end al fine di essere memorizzata in locale, ovviamente in caso di azione di salvataggio.\par
\cf1 5) BASE64\par
\cf0 Per quanto riguarda la memorizzazione in locale e il recupero delle immagini, abbiamo avuto la necessit\'e0 di doverci affidare a un sistema di codifica facile e veloce, in modo da garantire sempre elevate prestazioni e una reattivit\'e0 tale da consentire agli utenti prontezza d'uso dell'applicativo. Abbiamo deciso di fare affidamento in questo caso al protocollo di codifica Base64, che ha rispettato tutte le richieste implementative e prestazionali del nostro progetto.\par
Andando nello specifico, Base64 \'e8 un gruppo di schemi di codifica da binario a testo che rappresentano dati binari (pi\'f9 specificamente, una sequenza di byte a 8 bit) in un formato stringa ASCII traducendo i dati in una rappresentazione radix -64. Ogni cifra Base64 non finale rappresenta esattamente 6 bit di dati. Tre byte a 8 bit (cio\'e8 un totale di 24 bit) possono quindi essere rappresentati da quattro cifre Base64 a 6 bit.\par
Comune a tutti gli schemi di codifica da binario a testo, Base64 \'e8 progettato per trasportare dati archiviati in formati binari attraverso canali che supportano in modo affidabile solo contenuto di testo. Base64 \'e8 particolarmente diffuso nel World Wide Web, dove i suoi usi includono la possibilit\'e0 di incorporare file di immagine o altre risorse binarie all'interno di risorse testuali come file HTML e CSS , come nel caso del nostro progetto.\par
\par
\cf1 6) JSON\par
\cf0 JSON \'e8 un formato perfetto per lo scambio di dati fra applicazioni client/server. In particolare nel nostro progetto \'e8 stato sfruttato per codificare le informazioni da memorizzare in locale e che rappresentano gli indumenti con la relativa foto e metadati necessari affinch\'e8 questa sia processata. I metodi JSON che abbiamo adoperato si integrano perfettamente con il metodo di codifica delle foto catturate dall'app, ovvero in base64, fornendo addirittura un campo specifico per questo tipo di dati.\par
\cf1 7) TYPESCRIPT\par
\cf0 Typescript \'e8 un linguaggio di programmazione sviluppato da Microsoft ma comunque open-source, che riprende completamente la sintassi di javascript, estendola. Infattopu\'f2 essere definito come superset di JavaScript. La prima differenza fondamentale tra i due \'e8 che JavaScript \'e8 un linguaggio di scripting lato client, mentre TypeScript \'e8 un linguaggio compilato orientato agli oggetti. Inoltre quest'ultimo permette un controllo di tipo statico, che pu\'f2 comunque essere reso dinamico. Questa caratteristica che permette di andare a definire il tipo a variabili e funzioni rende molto pi\'f9 facile il debugging e la lettura stessa del codice. Nel dettaglio TypeScript ha tipi di dati come String, Number, Boolean, Null, Array, Enum, Tuple e Generics. \par
Un altro vantaggio \'e8 che consente di creare degli oggetti che si basano su delle classi, un po' come accade in altri linguaggi di programazzione orientati agli oggetti come C++ e Java, possibilit\'e0 che invece non \'e8 ammessa in JavaScript dove l'oggetto sarebbe stato in maniere anti intuitiva attraverso una funzione. Basandosi sulle classi, TypeScript supporta anche concetti come ereditarit\'e0, incapsulamento e polimorfismo, recuperati dal background di altri linguaggi orientati agli oggetti e che gli permettono di estendere le possibilit\'e0 offerte al programmatore.\par
Tuttavia, al di l\'e0 delle differenze che intercorrono tra JavaScript e TypeScript, questi due linguaggi restano comunque molto simili. Difatti tutte le funzionalit\'e0 di JavaScript sono disponibili in TypeScript, in quanto quest'ultimo \'e8 un superset del primo.\par
Abbiamo fatto uso di TypeScript per lo sviluppo di questa applicazione in quanto \'e8 un linguaggio richiesto per l'uso di Angular.\par
\cf1 8) HTTP\par
\cf0 In questa trattazione non possiamo non parlare del protocollo di comunicazione e trasferimento che ci ha permesso di far interagire il front end ed il back end dell'applicativo sviluppato. Questo perch\'e8, al fine di inviare le immagini al server per essere processate dal segmentatore o dalle reti neurali oppure per riportarle elaborate nel backend, avevamo bisogno di un protocollo facile, veloce e sicuro che stabilisse una connessione comunicativa tra i due endpoint.\par
Nel dettaglio HTTP, o HyperText Transfer Protocol \'e8 un protocollo del livello applicativo che, come anticipato sopra, riesce a trasmettere informazioni sia sul web che in applicazioni, con la tipica architettura client-server. Le richieste al server HTTP vengono effettuate sulla porta 80 per mezzo del protocollo TCP, o Transmission Control Protocol, a livello di trasporto.\par
HTTP \'e8  un protocollo che funziona con un'architettura di tipo client-server: il client effettua una richiesta  e il server la risposta inviata da un altro host.  Nell'uso corrente,  il client corrisponde al browser e il server alla macchina su cui risiede il sito  Esistono  quindi due tipi di messaggi HTTP: messaggi di richiesta e messaggi di risposta. \par
In particolare ai fini del progetto abbiamo fatto uso delle richieste POST al fine di inviare il file in base64 al server per l'elaborazione logica, mentre una richiesta GET \'e8 stata sfruttata per riprendere i dati una volta finito il processo.\par
\cf1 9)FLASK\par
 \cf0 Per quanto riguarda la gestione del back end, la scelta che abbiamo fatto \'e8 stata quella di affideraci a flask. Avevamo infatti bisogno di un framework completo in python che ci permettesse di ricevere richieste dal front end in modo da gestire le chiamate agli script in Python delle reti neurali che abbiamo utilizzato.\par
nel dettaglio Flask \'e8 quello che possiamo definire micro-framework, dato che non ha un nucleo complesso ma pu\'f2 essere esteso tramite numerosi plugin ed estensioni, che espone la possibilit\'e0 di mantenere un server ed un debugger, fondamentali per poter far interagire l'utente della web app con il codice delle reti neurali.\par
Abbiamo sfruttato la sua funzionalit\'e0 di server in modo da poter ricevere ed inviare dati al front end tramite delle chiamate a richieste HTTP. I dati ricevuti, chiaramente, vengono dati in input ai vari modelli per la categorizzazione e la segmentazione che li processano e li restituiscono come output da reinviare al client.\cf1\par
CONCLUSIONI\par
\cf0 In conclusione, l'applicativo sviluppato \'e8 un prodotto fatto e finito pronto per la distribuzione sul mercato digitale. I risultati raggiunti tramite il lavoro fatto sul progetto possono essere ritenuti ottimi, e in particolare il lavoro \'e8 stata un'occasione di approfondimento su molte dinamiche tecnologiche moderne ampiamente utilizzate al giorno d'oggi.\par
A partire da Angular, il framework per lo sviluppo front end probabilmente pi\'f9 completo ed in uso a livello globale per il fatto che offre la possibilit\'e0 di raggiungere una forte profondit\'e0 nello sviluppo pur rimanendo uno strumento abbastanza semplice da imparare. \par
Ionic e Capacitor che ci hanno permesso lo sviluppo di una applicazione multipiattaforma che si integra perfettamente con le API messe a disposizione da qualsiasi dispositivo mobile.La volont\'e0 di poter offrire una applicazione nativa che restasse comunque cross platform \'e8 stato un principio cardine per la realizzazione del progetto, questo nell'ottica di poter raggiungere il mercato completo senza dover sviluppare due codici semanticamente uguali.\par
Inoltre, abbiamo avuto l'occasione di approfondire, seppur marginalmente, anche un tema che reputiamo veramente molto importante ovvero quello dell'intelligenza artificiale ed in particolare delle reti neurali. Crediamo fermamente entrambi che questa nuova frontiera tecnologica abbia ancora molto da offrire e ci\'f2 che abbiamo visto sino ad ora a livello globale sia ancora l'inizio di tutto ci\'f2 che questa branca coinvolge. \par
Avendo dovuto lavorare con della logica lato server, alle competenze assunte durante lo svolgimento di questo progetto si aggiungono quindi anche le capacit\'e0 di gestione del backend tramite tecnologie come Flask, grazie alle quali abbiamo potuto sfruttare un server al quale inviare le richieste ed inoltre tutto il lato di comunicazione che coinvolge quindi HTTP, JSON e Base64 per quanto concerne l'invio dell'informazione.\par
Il risultato \'e8 stato quindi ottimale, sia per quanto riguarda lo sviluppo dell'applicativo sia per la grande mole di competenze acquisite.\cf1\par
\cf0\par
\cf1 DEMO\cf0\par
\par
\cf1\par
\cf0\par
}
 